/**
*Description: A program that is used to process the presidential voting data for the RichlandCollege country which consists of 4 states.
*There are 6 candidates running for the position and their names are recorded in the candData.txt text file. The results of the votes are randomly generated by this program 
*and is written to the voteData.txt file. There are 50, 000 entries in the file based on the given candidate names, random state selection (1-4), and random votes (0-50) per state.
*The vote data is stored in a data structure and used to calculate the total vote win by each candidate and the winner is announced at the end of the program. 
*Class: Summer - COSC 2436.86400
*Final Class Project: Presidential Election Vote Data Processing
*Date: 8/8/2018
*@author  Siang Swee Kong
*@version 0.0.0
*/ 

import java.io.*; //to read and write files
import java.util.Scanner; //to read file
import java.util.Random; //to generate random votes

/**A driver program that read in the candData.txt file, generates random votes and store them into a data structure and output the election result
* @author Siang Swee Kong
* @version 1.0.0
*/
public class TestElectionResult{
	/**Application entry point
	* @param args As a space delimited list of command line arguments 
	* @throws FileNotFoundException if the file that wants to be read or write to cannot be found or does not exist
	* @throws IOException if the file that wants to be read or write to cannot be found or does not exist
	*/	
     public static void main(String[] args){
          final int SIZE = 50000; //the number of entries
          final int numCandidates = 6; //number of candidates
          final int numStates = 4; //the number of state 
          final int minStates = 1; //the lowest state number
          final int maxRandomVotes = 50; //the highest vote number for each entry
          
          FileReader readFile;
          BufferedReader inputFile;
          String inputFileName; //store the input file name
          String input; //read the input
          String outputFileName; //store the output file name
          String candidates[]; //store the name of the candidates to the array
          Random rand = new Random(); //to generate random votes
          
          inputFileName ="candData.txt"; //the name of the text file that contains the name of the candidates
          outputFileName = "voteData.txt"; //store the random votes entries to this file
          
          System.out.print("There are " +  numCandidates + " candidates active at this time.\n");
          candidates = new String[numCandidates];

          // Attempt to open and read the file.
          try {
               // Open the file.
               readFile = new FileReader(inputFileName);
               inputFile = new BufferedReader(readFile);
               // Make sure the output file does not exist.
               File file = new File(outputFileName);
               if (file.exists()){
                  // Display an error message.
                  System.out.println("The file " + outputFileName + " already exists.");
                  System.out.println("Close the program.");
                  // Exit the program.
                  System.exit(1);
               }
               
               // Open the file.
               PrintWriter outputFile = new PrintWriter(file);
               // Read and display the file's contents.
               input = inputFile.readLine();
               for (int index = 0;index < numCandidates ;index++) {
                    candidates[index] = new String(input);
                    System.out.println(input);
                    input = inputFile.readLine();
               }
               // Write the random votes to the file.
               for(int index = 0;index < SIZE;index++){
                   outputFile.println(candidates[rand.nextInt(numCandidates)] + " " + (rand.nextInt(numStates) + minStates)+ " " + rand.nextInt(maxRandomVotes + 1));
               }
               // Close the file.
               outputFile.close();
               System.out.println("Vote data written to the " + outputFileName + " file.");
               inputFile.close();
               
               
               UnsortedOptimizedArray voteData; //create a reference to the data structure to store all the vote entries
               voteData = new UnsortedOptimizedArray(SIZE); 
              
               //read the vote data
               inputFileName = "voteData.txt";
               file = new File(inputFileName);
               Scanner scan = new Scanner(file); //read the file that contains the random vote entries
               
               String name; //store the candidate name in the entry
        	   int state; //store the state number in the entry
        	   int vote; //store the number votes in the entry
        	   Entry temp; //a temporary variable 
               while (scan.hasNextLine()) //read until the end of the file
               {
            	   name = scan.next(); //read in a string in the line
            	   state = scan.nextInt(); //read in an int after the string
            	   vote = scan.nextInt(); //read in an int after the string
            	   input = scan.nextLine(); //store the remaining spaces in the line
            	   
            	   temp = new Entry(name,state,vote);  //create a new entry and initialize with the data read in from the file
            	   voteData.insert(temp); //store the entry to the data structure
               }
               
               scan.close(); //close the file
               
              //create 6 candidates object and initialize them with the candidates name read in from the candData file
               Candidate candidate1,candidate2,candidate3,candidate4,candidate5,candidate6;
               candidate1 = new Candidate(candidates[0]);
               candidate2 = new Candidate(candidates[1]);
               candidate3 = new Candidate(candidates[2]);
               candidate4 = new Candidate(candidates[3]);
               candidate5 = new Candidate(candidates[4]);
               candidate6 = new Candidate(candidates[5]);

              //count the number of votes win by each state for the candidate and store these data into the candidate's attributes
              voteData.countAndSetVote(candidate1);
              voteData.countAndSetVote(candidate2);
              voteData.countAndSetVote(candidate3);
              voteData.countAndSetVote(candidate4);
              voteData.countAndSetVote(candidate5);
              voteData.countAndSetVote(candidate6);
                
              //create an array that store all the 6 candidate objects
              Candidate[] candidateList = new Candidate[] {candidate1,candidate2,candidate3,candidate4,candidate5,candidate6};
              
              //sort the candidates in ascending order by name
              ElectionResult.quickSort(candidateList, 0, numCandidates-1);
 
              //print all the candidates vote results information in ascending order
              System.out.println("\nPrint all the candidates information in ascending order.");
              ElectionResult.showAll(candidateList);
             
              //announce who is the winner of this election
              ElectionResult.announceWinner(candidateList);	
              
          }
          catch (FileNotFoundException e){ //catch the exception when the file is not found
               System.out.println("File not found.");
          }
          catch (IOException e){//catch the exception when the file is not found
               System.out.println(e.getMessage());
          } 
          
          System.exit(0); //close the program
     }
}
